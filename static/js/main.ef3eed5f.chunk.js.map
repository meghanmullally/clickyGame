{"version":3,"sources":["components/CharacterCard/index.js","components/Wrapper/index.js","components/Navbar/index.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","shuffleCharacters","id","Wrapper","children","Navbar","score","status","App","state","characters","goal","clicked","_this","includes","setState","topScore","push","length","i","j","Math","floor","random","_ref","_this2","this","components_Navbar","components_Wrapper","map","charObj","components_CharacterCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"k2CAaeA,MAVf,SAAuBC,GACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,QAAS,kBAAMT,EAAMU,kBAAkBV,EAAMW,gBCAvGC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,8BCe1BC,MAhBf,SAAgBd,GACd,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDAEfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UAA8BJ,EAAMe,OAEpCd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUJ,EAAMgB,WCyErBC,6MA1EbC,MAAM,CACJC,aACAJ,MAAO,EACPK,KAAM,GACNC,QAAS,GACTL,OAAQ,MAKZN,kBAAoB,SAAAC,GAEpB,IAAIU,EAAUC,EAAKJ,MAAMG,QAEzB,GAAGA,EAAQE,SAASZ,GAClBW,EAAKE,SAAS,CACZH,QAAS,GACTN,MAAO,EACPU,SAAU,EACVT,OAAQ,6CALZ,CAWE,GAFAK,EAAQK,KAAKf,GAES,KAAnBU,EAAQM,OAAX,CASAL,EAAKE,SAAS,CACZL,aACAE,UACAN,MAAOM,EAAQM,OACfX,OAAQ,KAIV,IAAK,IAAIY,EAAIT,EAAWQ,OAAS,EAAGC,EAAI,EAAGA,IAAK,CAC9C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADMK,EAEb,CAACd,EAAWU,GAAIV,EAAWS,IAA3DT,EAAWS,GAFkCK,EAAA,GAE9Bd,EAAWU,GAFmBI,EAAA,GAIhD,OAAOd,EApBLG,EAAKE,SAAS,CACdT,MAAO,GACPC,OAAQ,4CACRK,QAAS,+EAsBF,IAAAa,EAAAC,KACP,OACElC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACiC,EAAD,CACArB,MAAOoB,KAAKjB,MAAMH,MAClBK,KAAM,GACNJ,OAAQmB,KAAKjB,MAAMF,SACnBf,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,4BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,iHACC+B,KAAKjB,MAAMC,WAAWmB,IAAI,SAAAC,GACzB,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,CACP7B,GAAI4B,EAAQ5B,GACZ8B,IAAKF,EAAQ5B,GACbH,MAAO+B,EAAQ/B,MACfE,kBAAmBwB,EAAKxB,+BAnEhBgC,mBCHlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ef3eed5f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img className=\"shuffleScore\" alt={props.name} src={props.image} onClick={() => props.shuffleCharacters(props.id)}/>\n      </div>  \n    </div>\n  );\n}\n\nexport default CharacterCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-white bg-white\">\n        {/* <li className=\"navbar-brand\">Clicky Game</li> */}\n      <li className=\"score\">Score: {props.score}\n      </li>\n      <li className=\"status\">{props.status}\n      </li>\n\n    </nav>\n  </div>\n\n  );\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\n\n\nclass App extends Component {\n  state={\n    characters,\n    score: 0,\n    goal: 12,\n    clicked: [],\n    status: \"\"\n  };\n\n\n// shuffle the character cards when clicked \nshuffleCharacters = id => {\n\nlet clicked = this.state.clicked;\n//if clicked same image twice...game over\nif(clicked.includes(id)){\n  this.setState({\n    clicked: [],\n    score: 0,\n    topScore: 0,\n    status: \"Game Over! Click image to play again\"\n  });\n  return; \n} else {\n  clicked.push(id)\n// if goal is met yayyy congrats \n  if(clicked.length === 12) {\n    this.setState({\n    score: 12,\n    status: \"Congrats!!! You win!! Click to play again\",\n    clicked: []\n    });\n    return;\n  }\n\n  this.setState({\n    characters,\n    clicked,\n    score: clicked.length,\n    status: \"\"\n  });\n\n  // randomly shuffling the characters \n  for (let i = characters.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [characters[i], characters[j]] = [characters[j], characters[i]];\n  }\n  return characters;\n  }\n}\n\n\n  render() {\n    return (\n      <div>\n      <Navbar\n      score={this.state.score}\n      goal={12}\n      status={this.state.status}/>\n      <Wrapper>\n        <h1 className=\"title\">Sailor Moon Clicky Game!</h1>\n        <h4 className=\"description\">Click on any image to earn a point, but don't click on the same picture more than once. Click all 12 to win!!</h4>\n        {this.state.characters.map(charObj => {\n          return <CharacterCard\n          id={charObj.id} \n          key={charObj.id} \n          image={charObj.image}\n          shuffleCharacters={this.shuffleCharacters}\n          />\n        })}\n      </Wrapper>\n      </div>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}